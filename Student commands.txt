datetime - модуль для работы с датой и временем в наиболее удобной для человека форме.

datetime - предоставляет информацию о времени и дате по григорианскому календарю.
    date - предоставляет информацию о дате, без времени, по григорианскому календарю.
        .day - атрибут вернёт только день
        .month - атрибут вернёт только месяц
        .year -  атрибут вернёт только год
        .today() - метод вернёт текущую дату и время на компьютере
        .weekday() - предоставляет данные о дне недели (0 - пн, 6 - вс)
        .isoweekday() - предоставляет информацию о дне недели (1 - пн, 7 - вс)
        .min - атрибут возвращает минимально возможную дату
        .max - атрибут возвращает максимально возможную дату
        .fromordinal(<days>) - переводит переданное количество дней <days> в конкретную дату
        .toordinal(<date>) - переводит дату <date> в дни
    time() - предоставляет информация о времени до миллисекунды, без даты.
        .microsecond - информация о миллисекундах
        .second - информация о секундах
        .minute - информация о минутах
        .horse - информация о часах

    .replace() - заменяет формат даты-времени не используя удаление

timedelta - описывает период во времени между двумя различными моментами.
tzinfo  - предоставляет информация о часовом поясе.
timezone - описывает время, руководствуясь стандартом UTC.
str() - функция использующаяся по умолчанию за кулисами при выводе информации о дате. Включатся автоматически и преобразует информацию в читабельный для человек вид
repr() - функция преобразует информацию о дате понятную интерпретатору, используется по умолчанию при каждом вводе данных о времени
sorted() - функция сортирует список дат, времени, по опр. формату.
fromisoformat() - метод преобразовывает строку в дату по стандартам ISO.
combine() - объединение два типа данных <date> и <time> в один хранящий информацию о дате и времени одновременно
date() - отделяет дату
time() - отделяет время
now() - текущее локальное время, аналогичен методу today().
utcnow() - время по UTC-0
timestamp(<datatime>) - метод преобразовывает время в количество секунд прошедших с начала эпохи "1970"
fromtimestamp(<seconds>) - метод преобразовывает секунды в даты, относительно начала эпохи
.strptime(%d %h %M %Y) - формат для автоматическое форматирования даты времени на основе строки, необходимо указать на какой позиции находится значение

time - модуль позволяющий работать со временем
time() - функция возвращает количество секунд прошедших с начала эпохи
time_ns() - функция возвращаете количество нано секунд прошедших с начала эпохи
ctime() - функция возвращает локальное время на основе начала эпохи
sleep(<secs>) - функция принимает в качества аргумента secs количество секунд и останавливает выполнение программы на указанное время
monotonic() - функция для измерения времени работы программы, вне влияния ОС и IDE и др. факторов
monotonic_ns() - функция измерения работы программы в наносекундах
perf_counter() - наивысшую, научную, точность позволяет реализовать данная функция. Функция предназначена для коротких интервалов
perf_counter_ns() - аналогична функции perf_counter, но замеры производятся в нано секундах. Функция предназначена для сверх малых интервалов

Calendar - модуль посвящён работе с календарём
.day_name - атрибут возвращает имя дня недели на английском
.day_abbr - атрибут возвращает сокращённы варианты дней недели
.month_name - атрибут возвращает имя дня месяца
.month_abbr - атрибут вернёт сокращённое имя для месяца
.MONDAY - атрибут вернёт 0
...
.SUNDAY - атрибут вернёт 6
setfirstweenday() - изменяет стандартное значение первого дня недели
firstweekday() - функция вернёт целое число означающее первый день недели установленный по умолчанию
isleap() - функция проверяет год на високосность
leapdays(y1, y2) - функция возвращает количество високосных лет между y1 и y2
weekday(y, m, d) - функция возвращает целое число соответсвующее дню недели по заданным параметрам
monthrange(y, m) - функция возвращает день недели первого дня месяца и кол-во дней в месяце
monthcalendar(y, m) - функция возвращает матрицу дней недели
month(y, m, w, l) - функция возвращает календарный месяц. y- год, m- месяц, w- ширина календаря, l- количество строк, отводимые на неделю
calendar(y, w, l, c, m) - возвращает весь календарный год в виде многострочной структуры. c- кол-во пробелов между столбцами месяцев, m- кол-во столбцев


Потоковый ввод stdin, потоковый вывод stdout
read() - метод считывает поток данных, если в нём нет разделителей '\n'
readlines() - метод считывает строки данных из потока ввода, если есть разделители строк '\n'
write() - потоковый вывод данных, где необходимо самостоятельно указывать форматирование строк, типизацию и д.р.


Работа с CSV - (Comma Separated Values, значения разделённые запятыми)
Работа с TSV - (Tab Separated Values, значение разделённые табуляцией)
Работа с DSV - (Delimiter Separated Values, значения разграниченные разделителями)
.splitlines() - метод для разбития строк с символом по умолчанию '\n'
.DictReader
enumerate() - функция для автоматической нумерации строк переданного списка
csv.reader() - итерируемый объект автоматические разбивающий строку на соответсвующую таблицу
csv.writer() - объект специализирующийся на записи данных в формат csv
delimiter - аргумент reader'а, отвечающий за знак радения используемый в файле, по умолчанию ','
quotechar - аргумент reader'а, отучающий за использование кавычек в полях в файле, по умолчанию "' '"


Работа с JSON - (JavaScrip Object Notation) - текстовой формат данных основанный на языке программирования JS.
dumps(<value>) - функция для сериализации python-значения <value> в json строку
dump(<value>) -  функция для сериализации python-значения <value> в json файл (запись в файл)
loads(<value>) - функция для десеарилизации строки формата json
load(<value>) - функция принимает в качестве аргумента файл, ввод и десериализует его (чтение из файла)

indent=<value> - аргумент задаёт отступы от левого края
sort_keys=True/False - аргумент сортировки ключей
separator(<value>, <value>) - аргумент форматирования json формата
skipkeys - для пропуска не сериализуемых значений
ensure_ascii=True/False - аргумент для устранения ошибок при чтении не на Английском.


Zip-архивы
zipfile - модуль для работы с фалами в формате zip
printdir() - метод для печати дерева каталогов в zip-архиве
infolist() - метод позволяет сохранить информацию о дереве zip-архива в виде спец. объекта ZipInfo
is_dir() - метод для проверки на папку или файл
namelist() - метод возвращает список всех имён файлов в архиве
getinfo() - метод позволяющий получить информацию о конкретном файле в архиве
read() - метод возвращает сырые байты почтённого файлы
    .decode() - атрибут позволяющий указать конкретную кодировку при чтении файла
write(<file name>, <new file name>) - метод позволяющий записать данные в архив с возможностью дать новое имя файлу <new file name>
extract() -
extractall() -

.file_size() - атрибут возвращающий оригинальный размер файла
.data_time() - атрибут возвращает дату изменения файла
.compress_size() - атрибут возвращает размер сжатого файла
.filename() - атрибут возвращает имя полное имя файла/путь


Модуль pickle
dump() - функция применяет сериализацию преобразуя python-объект в бинарный json (запись в файл)
load() - функция десериализует бинарный json файл в python-объект (чтение с файла)
dumps() - функция аналогична dump, только без записи в файл (преобразование объекта в бинарный вид)
loads() - функция аналогична load, только без чтения данных из файла (преобразование бинарной последовательности в объект)